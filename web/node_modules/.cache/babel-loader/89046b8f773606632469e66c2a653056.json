{"ast":null,"code":"var _jsxFileName = \"/Users/abdel/Documents/web/newera/rate-food/web/src/components/Rate/Reactions.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Center, Box, Heading, Grid } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  emojis: \"😡\",\n  bgColor: \"red\"\n}, {\n  emojis: \"😕\",\n  bgColor: \"red\"\n}, {\n  emojis: \"😶\",\n  bgColor: \"red\"\n}, {\n  emojis: \"😁\",\n  bgColor: \"red\"\n}, {\n  emojis: \"😍\",\n  bgColor: \"red\"\n}];\nexport const Reactions = () => {\n  _s();\n\n  var _data$selected;\n\n  const [selected, SetSelected] = React.useState(-1);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    h: \"100vh\",\n    bg: ((_data$selected = data[selected]) === null || _data$selected === void 0 ? void 0 : _data$selected.bgColor) || \"#FFFFFF\",\n    transition: \".3s\",\n    children: /*#__PURE__*/_jsxDEV(Center, {\n      h: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        h: 10,\n        w: {\n          base: \"90%\",\n          md: \"600px\"\n        },\n        templateColumns: \"repeat(5, 1fr)\",\n        gap: 6,\n        children: data.map((rec, key) => /*#__PURE__*/_jsxDEV(Box, {\n          w: \"100%\",\n          h: \"10\",\n          cursor: \"pointer\",\n          textAlign: \"center\",\n          onClick: () => {\n            SetSelected(key);\n          },\n          opacity: selected == -1 ? 1 : selected != key ? 0.7 : 1,\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            fontSize: \"44px\",\n            children: rec.emojis\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reactions, \"U4jrrIdw/pwQ0zizZscn/gmWF6o=\");\n\n_c = Reactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reactions\");","map":{"version":3,"sources":["/Users/abdel/Documents/web/newera/rate-food/web/src/components/Rate/Reactions.tsx"],"names":["React","Center","Box","Heading","Grid","data","emojis","bgColor","Reactions","selected","SetSelected","useState","base","md","map","rec","key"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,OAAtB,EAA+BC,IAA/B,QAA2C,kBAA3C;;AAEA,MAAMC,IAAI,GAAG,CACX;AACEC,EAAAA,MAAM,EAAE,IADV;AAEEC,EAAAA,OAAO,EAAE;AAFX,CADW,EAKX;AACED,EAAAA,MAAM,EAAE,IADV;AAEEC,EAAAA,OAAO,EAAE;AAFX,CALW,EASX;AACED,EAAAA,MAAM,EAAE,IADV;AAEEC,EAAAA,OAAO,EAAE;AAFX,CATW,EAaX;AACED,EAAAA,MAAM,EAAE,IADV;AAEEC,EAAAA,OAAO,EAAE;AAFX,CAbW,EAiBX;AACED,EAAAA,MAAM,EAAE,IADV;AAEEC,EAAAA,OAAO,EAAE;AAFX,CAjBW,CAAb;AAuBA,OAAO,MAAMC,SAAmB,GAAG,MAAM;AAAA;;AAAA;;AACvC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,KAAK,CAACW,QAAN,CAAe,CAAC,CAAhB,CAAhC;AACA,sBACE,QAAC,GAAD;AACE,IAAA,CAAC,EAAE,OADL;AAEE,IAAA,EAAE,EAAE,mBAAAN,IAAI,CAACI,QAAD,CAAJ,kEAAgBF,OAAhB,KAA2B,SAFjC;AAGE,IAAA,UAAU,EAAE,KAHd;AAAA,2BAKE,QAAC,MAAD;AAAQ,MAAA,CAAC,EAAE,MAAX;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,CAAC,EAAE,EADL;AAEE,QAAA,CAAC,EAAE;AAAEK,UAAAA,IAAI,EAAE,KAAR;AAAeC,UAAAA,EAAE,EAAE;AAAnB,SAFL;AAGE,QAAA,eAAe,EAAC,gBAHlB;AAIE,QAAA,GAAG,EAAE,CAJP;AAAA,kBAMGR,IAAI,CAACS,GAAL,CAAS,CAACC,GAAD,EAAMC,GAAN,kBACR,QAAC,GAAD;AACE,UAAA,CAAC,EAAC,MADJ;AAEE,UAAA,CAAC,EAAC,IAFJ;AAIE,UAAA,MAAM,EAAE,SAJV;AAKE,UAAA,SAAS,EAAC,QALZ;AAME,UAAA,OAAO,EAAE,MAAM;AACbN,YAAAA,WAAW,CAACM,GAAD,CAAX;AACD,WARH;AASE,UAAA,OAAO,EAAEP,QAAQ,IAAI,CAAC,CAAb,GAAiB,CAAjB,GAAqBA,QAAQ,IAAIO,GAAZ,GAAkB,GAAlB,GAAwB,CATxD;AAAA,iCAWE,QAAC,OAAD;AAAS,YAAA,QAAQ,EAAE,MAAnB;AAAA,sBAA4BD,GAAG,CAACT;AAAhC;AAAA;AAAA;AAAA;AAAA;AAXF,WAGOU,GAHP;AAAA;AAAA;AAAA;AAAA,gBADD;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CAlCM;;GAAMR,S;;KAAAA,S","sourcesContent":["import React from \"react\";\nimport { Center, Box, Heading, Grid } from \"@chakra-ui/react\";\n\nconst data = [\n  {\n    emojis: \"😡\",\n    bgColor: \"red\",\n  },\n  {\n    emojis: \"😕\",\n    bgColor: \"red\",\n  },\n  {\n    emojis: \"😶\",\n    bgColor: \"red\",\n  },\n  {\n    emojis: \"😁\",\n    bgColor: \"red\",\n  },\n  {\n    emojis: \"😍\",\n    bgColor: \"red\",\n  },\n];\n\nexport const Reactions: React.FC = () => {\n  const [selected, SetSelected] = React.useState(-1);\n  return (\n    <Box\n      h={\"100vh\"}\n      bg={data[selected]?.bgColor || \"#FFFFFF\"}\n      transition={\".3s\"}\n    >\n      <Center h={\"100%\"}>\n        <Grid\n          h={10}\n          w={{ base: \"90%\", md: \"600px\" }}\n          templateColumns=\"repeat(5, 1fr)\"\n          gap={6}\n        >\n          {data.map((rec, key) => (\n            <Box\n              w=\"100%\"\n              h=\"10\"\n              key={key}\n              cursor={\"pointer\"}\n              textAlign=\"center\"\n              onClick={() => {\n                SetSelected(key);\n              }}\n              opacity={selected == -1 ? 1 : selected != key ? 0.7 : 1}\n            >\n              <Heading fontSize={\"44px\"}>{rec.emojis}</Heading>\n            </Box>\n          ))}\n        </Grid>\n      </Center>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}