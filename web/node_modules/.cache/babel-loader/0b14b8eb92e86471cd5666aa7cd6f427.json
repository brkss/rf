{"ast":null,"code":"var _jsxFileName = \"/Users/abdel/Documents/web/newera/rate-food/web/src/components/Rate/Bars.tsx\";\nimport React from \"react\";\nimport { Center, Box, Grid, Text } from \"@chakra-ui/react\";\nimport { Bar } from \"../Stats/Bar\";\nimport { reactions } from \"../../utils/data/reactions.data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Bars = () => {\n  const getMaxRate = () => {\n    const rates = reactions.map(r => Number(r.rate));\n    console.log(\"rates => \", rates);\n    return rates[0];\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    bg: \"gray.50\",\n    pos: \"relative\",\n    h: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(Center, {\n      h: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        h: \"80%\",\n        w: {\n          base: \"90%\",\n          md: \"600px\"\n        },\n        templateColumns: \"repeat(5, 1fr)\",\n        gap: 6,\n        children: reactions.map((rec, key) => /*#__PURE__*/_jsxDEV(Bar, {\n          rate: rec.rate,\n          color: rec.bgColor,\n          emojis: rec.emojis\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        transition: \".5s\",\n        pos: \"absolute\",\n        bottom: \"20%\",\n        p: \"5px 15px\",\n        rounded: \"50px\",\n        bg: \"#ffffff61\",\n        fontWeight: \"bold\",\n        children: getMaxRate() || \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = Bars;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bars\");","map":{"version":3,"sources":["/Users/abdel/Documents/web/newera/rate-food/web/src/components/Rate/Bars.tsx"],"names":["React","Center","Box","Grid","Text","Bar","reactions","Bars","getMaxRate","rates","map","r","Number","rate","console","log","base","md","rec","key","bgColor","emojis"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,IAAtB,EAA4BC,IAA5B,QAAwC,kBAAxC;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,SAAT,QAA0B,iCAA1B;;AAEA,OAAO,MAAMC,IAAc,GAAG,MAAM;AAClC,QAAMC,UAAU,GAAG,MAAM;AACvB,UAAMC,KAAK,GAAGH,SAAS,CAACI,GAAV,CAAeC,CAAD,IAAOC,MAAM,CAACD,CAAC,CAACE,IAAH,CAA3B,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBN,KAAzB;AAEA,WAAOA,KAAK,CAAC,CAAD,CAAZ;AACD,GALD;;AAOA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE,SAAT;AAAoB,IAAA,GAAG,EAAE,UAAzB;AAAqC,IAAA,CAAC,EAAE,OAAxC;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,CAAC,EAAE,MAAX;AAAA,8BACE,QAAC,IAAD;AACE,QAAA,CAAC,EAAE,KADL;AAEE,QAAA,CAAC,EAAE;AAAEO,UAAAA,IAAI,EAAE,KAAR;AAAeC,UAAAA,EAAE,EAAE;AAAnB,SAFL;AAGE,QAAA,eAAe,EAAC,gBAHlB;AAIE,QAAA,GAAG,EAAE,CAJP;AAAA,kBAMGX,SAAS,CAACI,GAAV,CAAc,CAACQ,GAAD,EAAMC,GAAN,kBACb,QAAC,GAAD;AACE,UAAA,IAAI,EAAED,GAAG,CAACL,IADZ;AAEE,UAAA,KAAK,EAAEK,GAAG,CAACE,OAFb;AAGE,UAAA,MAAM,EAAEF,GAAG,CAACG;AAHd,WAIOF,GAJP;AAAA;AAAA;AAAA;AAAA,gBADD;AANH;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE,QAAC,IAAD;AACE,QAAA,UAAU,EAAE,KADd;AAEE,QAAA,GAAG,EAAE,UAFP;AAGE,QAAA,MAAM,EAAE,KAHV;AAIE,QAAA,CAAC,EAAE,UAJL;AAKE,QAAA,OAAO,EAAE,MALX;AAME,QAAA,EAAE,EAAE,WANN;AAOE,QAAA,UAAU,EAAE,MAPd;AAAA,kBASGX,UAAU,MAAM;AATnB;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CAxCM;KAAMD,I","sourcesContent":["import React from \"react\";\nimport { Center, Box, Grid, Text } from \"@chakra-ui/react\";\nimport { Bar } from \"../Stats/Bar\";\nimport { reactions } from \"../../utils/data/reactions.data\";\n\nexport const Bars: React.FC = () => {\n  const getMaxRate = () => {\n    const rates = reactions.map((r) => Number(r.rate));\n    console.log(\"rates => \", rates);\n\n    return rates[0];\n  };\n\n  return (\n    <Box bg={\"gray.50\"} pos={\"relative\"} h={\"100vh\"}>\n      <Center h={\"100%\"}>\n        <Grid\n          h={\"80%\"}\n          w={{ base: \"90%\", md: \"600px\" }}\n          templateColumns=\"repeat(5, 1fr)\"\n          gap={6}\n        >\n          {reactions.map((rec, key) => (\n            <Bar\n              rate={rec.rate}\n              color={rec.bgColor}\n              emojis={rec.emojis}\n              key={key}\n            />\n          ))}\n        </Grid>\n        <Text\n          transition={\".5s\"}\n          pos={\"absolute\"}\n          bottom={\"20%\"}\n          p={\"5px 15px\"}\n          rounded={\"50px\"}\n          bg={\"#ffffff61\"}\n          fontWeight={\"bold\"}\n        >\n          {getMaxRate() || \"\"}\n        </Text>\n      </Center>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}