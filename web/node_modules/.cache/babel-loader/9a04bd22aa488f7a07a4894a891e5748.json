{"ast":null,"code":"var _jsxFileName = \"/Users/abdel/Documents/web/newera/rate-food/web/src/pages/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport queryString from \"query-string\";\nimport { useHistory } from \"react-router-dom\";\nimport { usePingQuery, useAuthMutation } from \"../generated/graphql\";\nimport { getAccessToken } from \"../utils/token/token\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Home = props => {\n  _s();\n\n  const history = useHistory();\n\n  const _ping = usePingQuery();\n\n  const [auth] = useAuthMutation();\n\n  const parseParams = () => {\n    const params = queryString.parse(props.location.search);\n    if (getAccessToken()) history.push(\"/feedback\");\n    if (!params.code) history.push(\"/login\");\n\n    if (params.code) {\n      auth({\n        variables: {\n          code: params.code\n        },\n        onCompleted: res => {\n          if (res.auth.status) {\n            history.push(\"/feedback\");\n          } else {\n            console.log(\"something went wrong ! \");\n          }\n        }\n      });\n    }\n\n    console.log(\"code => \", params.code);\n  };\n\n  React.useEffect(() => {\n    parseParams();\n  }, []);\n  if (_ping.loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"This is Home ! \", _ping.data.ping, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Home, \"dBB72WQHx95aeTxmOE6ZOQ75QzA=\", false, function () {\n  return [useHistory, usePingQuery, useAuthMutation];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/abdel/Documents/web/newera/rate-food/web/src/pages/Home.tsx"],"names":["React","queryString","useHistory","usePingQuery","useAuthMutation","getAccessToken","Home","props","history","_ping","auth","parseParams","params","parse","location","search","push","code","variables","onCompleted","res","status","console","log","useEffect","loading","data","ping"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,sBAA9C;AACA,SAASC,cAAT,QAA+B,sBAA/B;;;AAEA,OAAO,MAAMC,IAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAMC,OAAO,GAAGN,UAAU,EAA1B;;AACA,QAAMO,KAAK,GAAGN,YAAY,EAA1B;;AACA,QAAM,CAACO,IAAD,IAASN,eAAe,EAA9B;;AAEA,QAAMO,WAAW,GAAG,MAAM;AACxB,UAAMC,MAAM,GAAGX,WAAW,CAACY,KAAZ,CAAkBN,KAAK,CAACO,QAAN,CAAeC,MAAjC,CAAf;AACA,QAAIV,cAAc,EAAlB,EAAsBG,OAAO,CAACQ,IAAR,CAAa,WAAb;AACtB,QAAI,CAACJ,MAAM,CAACK,IAAZ,EAAkBT,OAAO,CAACQ,IAAR,CAAa,QAAb;;AAClB,QAAIJ,MAAM,CAACK,IAAX,EAAiB;AACfP,MAAAA,IAAI,CAAC;AACHQ,QAAAA,SAAS,EAAE;AACTD,UAAAA,IAAI,EAAEL,MAAM,CAACK;AADJ,SADR;AAIHE,QAAAA,WAAW,EAAGC,GAAD,IAAS;AACpB,cAAIA,GAAG,CAACV,IAAJ,CAASW,MAAb,EAAqB;AACnBb,YAAAA,OAAO,CAACQ,IAAR,CAAa,WAAb;AACD,WAFD,MAEO;AACLM,YAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD;AACF;AAVE,OAAD,CAAJ;AAYD;;AACDD,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBX,MAAM,CAACK,IAA/B;AACD,GAnBD;;AAqBAjB,EAAAA,KAAK,CAACwB,SAAN,CAAgB,MAAM;AACpBb,IAAAA,WAAW;AACZ,GAFD,EAEG,EAFH;AAIA,MAAIF,KAAK,CAACgB,OAAV,EAAmB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACnB,sBACE;AAAA,2BACE;AAAA,oCAAoBhB,KAAK,CAACiB,IAAN,CAAYC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CApCM;;GAAMrB,I;UACKJ,U,EACFC,Y,EACCC,e;;;KAHJE,I","sourcesContent":["import React from \"react\";\nimport queryString from \"query-string\";\nimport { useHistory } from \"react-router-dom\";\nimport { usePingQuery, useAuthMutation } from \"../generated/graphql\";\nimport { getAccessToken } from \"../utils/token/token\";\n\nexport const Home: React.FC<any> = (props) => {\n  const history = useHistory();\n  const _ping = usePingQuery();\n  const [auth] = useAuthMutation();\n\n  const parseParams = () => {\n    const params = queryString.parse(props.location.search);\n    if (getAccessToken()) history.push(\"/feedback\");\n    if (!params.code) history.push(\"/login\");\n    if (params.code) {\n      auth({\n        variables: {\n          code: params.code as string,\n        },\n        onCompleted: (res) => {\n          if (res.auth.status) {\n            history.push(\"/feedback\");\n          } else {\n            console.log(\"something went wrong ! \");\n          }\n        },\n      });\n    }\n    console.log(\"code => \", params.code);\n  };\n\n  React.useEffect(() => {\n    parseParams();\n  }, []);\n\n  if (_ping.loading) return <p>loading</p>;\n  return (\n    <>\n      <h1>This is Home ! {_ping.data!.ping} </h1>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}