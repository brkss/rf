{"ast":null,"code":"var _jsxFileName = \"/Users/abdel/Documents/web/newera/rate-food/web/src/Application.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { BrowserRouter, Route, Switch, useHistory } from \"react-router-dom\";\nimport { routes } from \"./utils/config/routes\";\nimport { DEFAULT_API_URL } from \"./utils/config/constants\";\nimport { getAccessToken, setAccessToken } from \"./utils/token/token\";\nimport { Center, Spinner } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Application = () => {\n  _s();\n\n  const [loading, setLoading] = React.useState(true);\n  const history = useHistory();\n  React.useEffect(() => {\n    fetch(`${DEFAULT_API_URL}/refresh_token`, {\n      credentials: \"include\",\n      method: \"POST\"\n    }).then(async res => {\n      const data = await res.json();\n\n      if (data.status === true) {\n        setAccessToken(data.token);\n        console.log(\"access token\", getAccessToken());\n      } else {\n        history.push(\"/login\");\n      }\n\n      console.log(\"refresh token result => \", data);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(Center, {\n    height: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(Spinner, {\n      size: \"md\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: routes.map((route, key) => /*#__PURE__*/_jsxDEV(Route, {\n          path: route.path,\n          exact: route.exact,\n          render: props => /*#__PURE__*/_jsxDEV(route.component, { ...route.name,\n            ...route.props,\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Application, \"+FybftbU/tri9zzxQVwY8+pOdmo=\", false, function () {\n  return [useHistory];\n});\n\n_c = Application;\n\nvar _c;\n\n$RefreshReg$(_c, \"Application\");","map":{"version":3,"sources":["/Users/abdel/Documents/web/newera/rate-food/web/src/Application.tsx"],"names":["React","BrowserRouter","Route","Switch","useHistory","routes","DEFAULT_API_URL","getAccessToken","setAccessToken","Center","Spinner","Application","loading","setLoading","useState","history","useEffect","fetch","credentials","method","then","res","data","json","status","token","console","log","push","map","route","key","path","exact","props","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,KAFF,EAGEC,MAHF,EAKEC,UALF,QAMO,kBANP;AAOA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,qBAA/C;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,kBAAhC;;;AAEA,OAAO,MAAMC,WAAqB,GAAG,MAAM;AAAA;;AACzC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,KAAK,CAACc,QAAN,CAAe,IAAf,CAA9B;AACA,QAAMC,OAAO,GAAGX,UAAU,EAA1B;AACAJ,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM;AACpBC,IAAAA,KAAK,CAAE,GAAEX,eAAgB,gBAApB,EAAqC;AACxCY,MAAAA,WAAW,EAAE,SAD2B;AAExCC,MAAAA,MAAM,EAAE;AAFgC,KAArC,CAAL,CAGGC,IAHH,CAGQ,MAAOC,GAAP,IAAe;AACrB,YAAMC,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;;AACA,UAAID,IAAI,CAACE,MAAL,KAAgB,IAApB,EAA0B;AACxBhB,QAAAA,cAAc,CAACc,IAAI,CAACG,KAAN,CAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BpB,cAAc,EAA1C;AACD,OAHD,MAGO;AACLQ,QAAAA,OAAO,CAACa,IAAR,CAAa,QAAb;AACD;;AACDF,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCL,IAAxC;AAEAT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAdD;AAeD,GAhBD,EAgBG,EAhBH;AAkBA,MAAID,OAAJ,EACE,oBACE,QAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,OAAf;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAMF,sBACE;AAAA,2BACE,QAAC,aAAD;AAAA,6BACE,QAAC,MAAD;AAAA,kBACGP,MAAM,CAACwB,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,kBACV,QAAC,KAAD;AACE,UAAA,IAAI,EAAED,KAAK,CAACE,IADd;AAGE,UAAA,KAAK,EAAEF,KAAK,CAACG,KAHf;AAIE,UAAA,MAAM,EAAGC,KAAD,iBACN,QAAC,KAAD,CAAO,SAAP,OAAqBJ,KAAK,CAACK,IAA3B;AAAA,eAAqCL,KAAK,CAACI,KAA3C;AAAA,eAAsDA;AAAtD;AAAA;AAAA;AAAA;AAAA;AALJ,WAEOH,GAFP;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkBD,CA9CM;;GAAMpB,W;UAEKP,U;;;KAFLO,W","sourcesContent":["import React from \"react\";\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  RouteComponentProps,\n  useHistory,\n} from \"react-router-dom\";\nimport { routes } from \"./utils/config/routes\";\nimport { DEFAULT_API_URL } from \"./utils/config/constants\";\nimport { getAccessToken, setAccessToken } from \"./utils/token/token\";\nimport { Center, Spinner } from \"@chakra-ui/react\";\n\nexport const Application: React.FC = () => {\n  const [loading, setLoading] = React.useState(true);\n  const history = useHistory();\n  React.useEffect(() => {\n    fetch(`${DEFAULT_API_URL}/refresh_token`, {\n      credentials: \"include\",\n      method: \"POST\",\n    }).then(async (res) => {\n      const data = await res.json();\n      if (data.status === true) {\n        setAccessToken(data.token);\n        console.log(\"access token\", getAccessToken());\n      } else {\n        history.push(\"/login\");\n      }\n      console.log(\"refresh token result => \", data);\n\n      setLoading(false);\n    });\n  }, []);\n\n  if (loading)\n    return (\n      <Center height=\"100vh\">\n        <Spinner size=\"md\" />\n      </Center>\n    );\n\n  return (\n    <>\n      <BrowserRouter>\n        <Switch>\n          {routes.map((route, key) => (\n            <Route\n              path={route.path}\n              key={key}\n              exact={route.exact}\n              render={(props: RouteComponentProps) => (\n                <route.component {...route.name} {...route.props} {...props} />\n              )}\n            />\n          ))}\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}