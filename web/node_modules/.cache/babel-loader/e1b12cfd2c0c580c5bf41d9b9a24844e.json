{"ast":null,"code":"var _jsxFileName = \"/Users/abdel/Documents/web/newera/rate-food/web/src/Application.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { routes } from \"./utils/config/routes\";\nimport { DEFAULT_API_URL } from \"./utils/config/constants\";\nimport { getAccessToken, setAccessToken } from \"./utils/token/token\";\nimport { Center, Spinner } from \"@chakra-ui/react\";\nimport { GuardRoute } from \"./components\";\nimport { Nav } from \"./components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Application = () => {\n  _s();\n\n  const [loading, setLoading] = React.useState(true);\n  React.useEffect(() => {\n    fetch(`${DEFAULT_API_URL}/refresh_token`, {\n      credentials: \"include\",\n      method: \"POST\"\n    }).then(async res => {\n      const data = await res.json();\n\n      if (data.status === true) {\n        setAccessToken(data.token);\n        console.log(\"access token\", getAccessToken());\n      }\n\n      console.log(\"refresh token result => \", data);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(Center, {\n    height: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(Spinner, {\n      size: \"md\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [getAccessToken() ? /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }, this) : null, /*#__PURE__*/_jsxDEV(Switch, {\n        children: routes.map((route, key) => route.protected ? /*#__PURE__*/_jsxDEV(GuardRoute, {\n          route: route\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Route, {\n          path: route.path,\n          exact: route.exact,\n          render: props => /*#__PURE__*/_jsxDEV(route.component, { ...route.name,\n            ...route.props,\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 19\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Application, \"J7PPXooW06IQ11rfabbvgk72KFw=\");\n\n_c = Application;\n\nvar _c;\n\n$RefreshReg$(_c, \"Application\");","map":{"version":3,"sources":["/Users/abdel/Documents/web/newera/rate-food/web/src/Application.tsx"],"names":["React","BrowserRouter","Route","Switch","routes","DEFAULT_API_URL","getAccessToken","setAccessToken","Center","Spinner","GuardRoute","Nav","Application","loading","setLoading","useState","useEffect","fetch","credentials","method","then","res","data","json","status","token","console","log","map","route","key","protected","path","exact","props","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,KAFF,EAGEC,MAHF,QAMO,kBANP;AAOA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,qBAA/C;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,kBAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,GAAT,QAAoB,cAApB;;;AAEA,OAAO,MAAMC,WAAqB,GAAG,MAAM;AAAA;;AACzC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,KAAK,CAACe,QAAN,CAAe,IAAf,CAA9B;AACAf,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM;AACpBC,IAAAA,KAAK,CAAE,GAAEZ,eAAgB,gBAApB,EAAqC;AACxCa,MAAAA,WAAW,EAAE,SAD2B;AAExCC,MAAAA,MAAM,EAAE;AAFgC,KAArC,CAAL,CAGGC,IAHH,CAGQ,MAAOC,GAAP,IAAe;AACrB,YAAMC,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;;AACA,UAAID,IAAI,CAACE,MAAL,KAAgB,IAApB,EAA0B;AACxBjB,QAAAA,cAAc,CAACe,IAAI,CAACG,KAAN,CAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BrB,cAAc,EAA1C;AACD;;AACDoB,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCL,IAAxC;AAEAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAZD;AAaD,GAdD,EAcG,EAdH;AAgBA,MAAID,OAAJ,EACE,oBACE,QAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,OAAf;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAMF,sBACE;AAAA,2BACE,QAAC,aAAD;AAAA,iBACGP,cAAc,kBAAK,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cAAL,GAAe,IADhC,eAEE,QAAC,MAAD;AAAA,kBACGF,MAAM,CAACwB,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,KACVD,KAAK,CAACE,SAAN,gBACE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAEF;AAAnB,WAA+BC,GAA/B;AAAA;AAAA;AAAA;AAAA,gBADF,gBAGE,QAAC,KAAD;AACE,UAAA,IAAI,EAAED,KAAK,CAACG,IADd;AAGE,UAAA,KAAK,EAAEH,KAAK,CAACI,KAHf;AAIE,UAAA,MAAM,EAAGC,KAAD,iBACN,QAAC,KAAD,CAAO,SAAP,OACML,KAAK,CAACM,IADZ;AAAA,eAEMN,KAAK,CAACK,KAFZ;AAAA,eAGMA;AAHN;AAAA;AAAA;AAAA;AAAA;AALJ,WAEOJ,GAFP;AAAA;AAAA;AAAA;AAAA,gBAJH;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA2BD,CApDM;;GAAMlB,W;;KAAAA,W","sourcesContent":["import React from \"react\";\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  RouteComponentProps,\n  useHistory,\n} from \"react-router-dom\";\nimport { routes } from \"./utils/config/routes\";\nimport { DEFAULT_API_URL } from \"./utils/config/constants\";\nimport { getAccessToken, setAccessToken } from \"./utils/token/token\";\nimport { Center, Spinner } from \"@chakra-ui/react\";\nimport { GuardRoute } from \"./components\";\nimport { Nav } from \"./components\";\n\nexport const Application: React.FC = () => {\n  const [loading, setLoading] = React.useState(true);\n  React.useEffect(() => {\n    fetch(`${DEFAULT_API_URL}/refresh_token`, {\n      credentials: \"include\",\n      method: \"POST\",\n    }).then(async (res) => {\n      const data = await res.json();\n      if (data.status === true) {\n        setAccessToken(data.token);\n        console.log(\"access token\", getAccessToken());\n      }\n      console.log(\"refresh token result => \", data);\n\n      setLoading(false);\n    });\n  }, []);\n\n  if (loading)\n    return (\n      <Center height=\"100vh\">\n        <Spinner size=\"md\" />\n      </Center>\n    );\n\n  return (\n    <>\n      <BrowserRouter>\n        {getAccessToken() ? <Nav /> : null}\n        <Switch>\n          {routes.map((route, key) =>\n            route.protected ? (\n              <GuardRoute route={route} key={key} />\n            ) : (\n              <Route\n                path={route.path}\n                key={key}\n                exact={route.exact}\n                render={(props: RouteComponentProps) => (\n                  <route.component\n                    {...route.name}\n                    {...route.props}\n                    {...props}\n                  />\n                )}\n              />\n            )\n          )}\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}