{"ast":null,"code":"var _jsxFileName = \"/Users/abdel/Documents/web/newera/rate-food/web/src/components/Meal/Timer.tsx\";\nimport React from \"react\";\nimport { Center, Box, CircularProgress, CircularProgressLabel } from \"@chakra-ui/react\";\nimport CountDown from \"react-countdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Timer = () => {\n  const renderer = ({\n    hours,\n    minutes,\n    seconds,\n    completed\n  }) => {\n    if (completed) {\n      // Render a complete state\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ready !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 14\n      }, this);\n    } else {\n      // Render a countdown\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [formatTime(hours), \":\", formatTime(minutes), \":\", formatTime(seconds)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const formatTime = time => {\n    if (time < 10) return `0${time}`;\n    return time;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    bg: \"gray.100\",\n    h: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(Center, {\n      h: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: \"2xs\",\n        thickness: \"5px\",\n        value: 40,\n        color: \"green.400\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgressLabel, {\n          fontSize: \"20px\",\n          fontWeight: \"bold\",\n          opacity: 0.8,\n          children: /*#__PURE__*/_jsxDEV(CountDown, {\n            date: Date.now() + 100000,\n            renderer: renderer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/abdel/Documents/web/newera/rate-food/web/src/components/Meal/Timer.tsx"],"names":["React","Center","Box","CircularProgress","CircularProgressLabel","CountDown","Timer","renderer","hours","minutes","seconds","completed","formatTime","time","Date","now"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,GAFF,EAGEC,gBAHF,EAIEC,qBAJF,QAKO,kBALP;AAMA,OAAOC,SAAP,MAAsB,iBAAtB;;AAEA,OAAO,MAAMC,KAAe,GAAG,MAAM;AACnC,QAAMC,QAAQ,GAAG,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA;AAA3B,GAAD,KAAiD;AAChE,QAAIA,SAAJ,EAAe;AACb;AACA,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAHD,MAGO;AACL;AACA,0BACE;AAAA,mBACGC,UAAU,CAACJ,KAAD,CADb,OACuBI,UAAU,CAACH,OAAD,CADjC,OAC6CG,UAAU,CAACF,OAAD,CADvD;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AACF,GAZD;;AAcA,QAAME,UAAU,GAAIC,IAAD,IAAkB;AACnC,QAAIA,IAAI,GAAG,EAAX,EAAe,OAAQ,IAAGA,IAAK,EAAhB;AACf,WAAOA,IAAP;AACD,GAHD;;AAKA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE,UAAT;AAAqB,IAAA,CAAC,EAAE,OAAxB;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,CAAC,EAAE,MAAX;AAAA,6BACE,QAAC,gBAAD;AACE,QAAA,IAAI,EAAE,KADR;AAEE,QAAA,SAAS,EAAE,KAFb;AAGE,QAAA,KAAK,EAAE,EAHT;AAIE,QAAA,KAAK,EAAC,WAJR;AAAA,+BAME,QAAC,qBAAD;AACE,UAAA,QAAQ,EAAE,MADZ;AAEE,UAAA,UAAU,EAAE,MAFd;AAGE,UAAA,OAAO,EAAE,GAHX;AAAA,iCAKE,QAAC,SAAD;AAAW,YAAA,IAAI,EAAEC,IAAI,CAACC,GAAL,KAAa,MAA9B;AAAsC,YAAA,QAAQ,EAAER;AAAhD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA9CM;KAAMD,K","sourcesContent":["import React from \"react\";\nimport {\n  Center,\n  Box,\n  CircularProgress,\n  CircularProgressLabel,\n} from \"@chakra-ui/react\";\nimport CountDown from \"react-countdown\";\n\nexport const Timer: React.FC = () => {\n  const renderer = ({ hours, minutes, seconds, completed }: any) => {\n    if (completed) {\n      // Render a complete state\n      return <p>Ready !</p>;\n    } else {\n      // Render a countdown\n      return (\n        <span>\n          {formatTime(hours)}:{formatTime(minutes)}:{formatTime(seconds)}\n        </span>\n      );\n    }\n  };\n\n  const formatTime = (time: number) => {\n    if (time < 10) return `0${time}`;\n    return time;\n  };\n\n  return (\n    <Box bg={\"gray.100\"} h={\"100vh\"}>\n      <Center h={\"100%\"}>\n        <CircularProgress\n          size={\"2xs\"}\n          thickness={\"5px\"}\n          value={40}\n          color=\"green.400\"\n        >\n          <CircularProgressLabel\n            fontSize={\"20px\"}\n            fontWeight={\"bold\"}\n            opacity={0.8}\n          >\n            <CountDown date={Date.now() + 100000} renderer={renderer} />\n          </CircularProgressLabel>\n        </CircularProgress>\n        {/*\n        <CircularProgress\n          variant={\"determinate\"}\n          aria-label={\"60\"}\n          value={60}\n          />*/}\n      </Center>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}