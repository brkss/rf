{"ast":null,"code":"var _jsxFileName = \"/Users/abdel/Documents/web/newera/rate-food/web/src/components/Meal/Timer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Center, Box, Heading, Text, CircularProgress, CircularProgressLabel } from \"@chakra-ui/react\";\nimport CountDown from \"react-countdown\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Timer = ({\n  time,\n  label,\n  mealName,\n  reload,\n  mealBeforeEndTime\n}) => {\n  _s();\n\n  const [progress, SetProgress] = React.useState(null);\n\n  const renderer = ({\n    hours,\n    minutes,\n    seconds,\n    completed\n  }) => {\n    const mbet = moment(mealBeforeEndTime);\n    const start = moment(time);\n    const diff = start.diff(mbet);\n    const rest = start.diff(moment());\n    const p = Math.floor(rest * 100 / diff); // to not exceed maximum update depth\n\n    if (!progress || p > progress + 1) SetProgress(p);\n    console.log(\"Progress \", p);\n\n    if (completed) {\n      reload();\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [formatTime(hours), \":\", formatTime(minutes), \":\", formatTime(seconds)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const formatTime = time => {\n    if (time < 10) return `0${time}`;\n    return time;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    bg: \"gray.100\",\n    h: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(Center, {\n      h: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        textTransform: \"uppercase\",\n        pos: \"absolute\",\n        fontSize: \"16px\",\n        top: \"10%\",\n        children: [\"\\uD83E\\uDD57 \", mealName, \" will be in\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: \"2xs\",\n        thickness: \"5px\",\n        value: progress || 100,\n        color: \"green.400\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgressLabel, {\n          fontSize: \"20px\",\n          fontWeight: \"bold\",\n          opacity: 0.8,\n          children: [/*#__PURE__*/_jsxDEV(CountDown, {\n            date: time,\n            renderer: renderer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"12px\",\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"Z7aIuCtsLTMuyhJFDzjS8mry99Q=\");\n\n_c = Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/abdel/Documents/web/newera/rate-food/web/src/components/Meal/Timer.tsx"],"names":["React","Center","Box","Heading","Text","CircularProgress","CircularProgressLabel","CountDown","moment","Timer","time","label","mealName","reload","mealBeforeEndTime","progress","SetProgress","useState","renderer","hours","minutes","seconds","completed","mbet","start","diff","rest","p","Math","floor","console","log","formatTime"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Center,\n  Box,\n  Heading,\n  Text,\n  CircularProgress,\n  CircularProgressLabel,\n} from \"@chakra-ui/react\";\nimport CountDown from \"react-countdown\";\nimport moment from \"moment\";\n\ninterface Props {\n  time: string;\n  label: string;\n  mealName: string;\n  mealBeforeEndTime: string;\n  reload: () => void;\n}\n\nexport const Timer: React.FC<Props> = ({\n  time,\n  label,\n  mealName,\n  reload,\n  mealBeforeEndTime,\n}) => {\n  const [progress, SetProgress] = React.useState<number | null>(null);\n  const renderer = ({ hours, minutes, seconds, completed }: any) => {\n    const mbet = moment(mealBeforeEndTime);\n    const start = moment(time);\n    const diff = start.diff(mbet);\n    const rest = start.diff(moment());\n    const p = Math.floor((rest * 100) / diff);\n    // to not exceed maximum update depth\n    if (!progress || p > progress + 1) SetProgress(p);\n    console.log(\"Progress \", p);\n    if (completed) {\n      reload();\n    } else {\n      return (\n        <span>\n          {formatTime(hours)}:{formatTime(minutes)}:{formatTime(seconds)}\n        </span>\n      );\n    }\n  };\n\n  const formatTime = (time: number) => {\n    if (time < 10) return `0${time}`;\n    return time;\n  };\n\n  return (\n    <Box bg={\"gray.100\"} h={\"100vh\"}>\n      <Center h={\"100%\"}>\n        <Heading\n          textTransform=\"uppercase\"\n          pos={\"absolute\"}\n          fontSize={\"16px\"}\n          top={\"10%\"}\n        >\n          ðŸ¥— {mealName} will be in\n        </Heading>\n        <CircularProgress\n          size={\"2xs\"}\n          thickness={\"5px\"}\n          value={progress || 100}\n          color=\"green.400\"\n        >\n          <CircularProgressLabel\n            fontSize={\"20px\"}\n            fontWeight={\"bold\"}\n            opacity={0.8}\n          >\n            <CountDown date={time} renderer={renderer} />\n            <Text fontSize={\"12px\"}>{label}</Text>\n          </CircularProgressLabel>\n        </CircularProgress>\n      </Center>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}